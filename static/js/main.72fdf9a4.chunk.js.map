{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABETICALLY","SORT_FIELD_BY_LENGTH","App","useState","sortField","setSortField","reversed","setReversed","goods","preparedGoods","sort","a","b","length","reverse","getPreparedGoods","showReset","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAEIC,EAA4B,iBAC5BC,EAAuB,SAyBtB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EA1BR,SAA0BA,EAAOJ,EAAWE,GAC1C,IAAMG,EAAa,YAAOD,GAE1B,OAAQJ,GACN,KAAKJ,EACHS,EAAcC,OACd,MAEF,KAAKT,EACHQ,EAAcC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAW9C,OAJIP,GACFG,EAAcK,UAGTL,EAMOM,CAAiBhB,EAAiBK,EAAWE,GAErDU,EAAYZ,GAAaE,EAO/B,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UACtB,CAAE,WAAYf,IAAcJ,IAC9BoB,QAAS,kBAAMf,EAAaL,IAJ9B,iCASA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,WAAYf,IAAcH,IAC9BmB,QAAS,kBAAMf,EAAaJ,IAJ9B,4BASA,wBACEiB,KAAK,SACLD,UAAWE,IAAG,SAAU,aACtB,CAAE,YAAab,IACjBc,QAAS,kBAAMb,GAAaD,IAJ9B,qBASCU,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAvCV,WACEb,GAAY,GACZF,EAAa,KAkCP,sBAUJ,6BACGG,EAAMa,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YChGjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.72fdf9a4.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport React, { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\nconst SORT_FIELD_ALPHABETICALLY = 'alphabetically';\nconst SORT_FIELD_BY_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, sortField, reversed) {\n  const preparedGoods = [...goods];\n\n  switch (sortField) {\n    case SORT_FIELD_ALPHABETICALLY:\n      preparedGoods.sort();\n      break;\n\n    case SORT_FIELD_BY_LENGTH:\n      preparedGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (reversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reversed, setReversed] = useState(false);\n  const goods = getPreparedGoods(goodsFromServer, sortField, reversed);\n\n  const showReset = sortField || reversed;\n\n  function reset() {\n    setReversed(false);\n    setSortField('');\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info',\n            { 'is-light': sortField !== SORT_FIELD_ALPHABETICALLY })}\n          onClick={() => setSortField(SORT_FIELD_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success',\n            { 'is-light': sortField !== SORT_FIELD_BY_LENGTH })}\n          onClick={() => setSortField(SORT_FIELD_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning',\n            { 'is-light': !reversed })}\n          onClick={() => setReversed(!reversed)}\n        >\n          Reverse\n        </button>\n\n        {showReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}